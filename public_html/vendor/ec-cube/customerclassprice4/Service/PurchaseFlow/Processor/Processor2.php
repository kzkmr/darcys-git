<?php
/**
 * This file is part of CustomerClassPrice4
 *
 * Copyright(c) Akira Kurozumi <info@a-zumi.net>
 *
 * https://a-zumi.net
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace Plugin\CustomerClassPrice4\Service\PurchaseFlow\Processor;


use Eccube\Annotation\ShoppingFlow;
use Eccube\Entity\ItemHolderInterface;
use Eccube\Entity\Order;
use Eccube\Entity\OrderItem;
use Eccube\Service\PurchaseFlow\Processor\DeliveryFeeFreeByShippingPreprocessor;
use Eccube\Service\PurchaseFlow\Processor\DeliveryFeePreprocessor;
use Eccube\Service\PurchaseFlow\PurchaseContext;

/**
 * 送料無料条件の再計算
 *
 * @ShoppingFlow()
 *
 * Class Processor4
 * @package Plugin\CustomerClassPrice4\Service\PurchaseFlow\Processor
 */
class Processor2 extends DeliveryFeeFreeByShippingPreprocessor
{
    public function process(ItemHolderInterface $itemHolder, PurchaseContext $context)
    {
        if (!($this->BaseInfo->getDeliveryFreeAmount() || $this->BaseInfo->getDeliveryFreeQuantity())) {
            return;
        }

        // 送料無料になっていた場合戻す
        if ($itemHolder instanceof Order) {
            $Order = $itemHolder;
            foreach ($Order->getShippings() as $shipping) {
                foreach ($shipping->getOrderItems() as $orderItem) {
                    if ($orderItem instanceof OrderItem) {
                        if ($orderItem->getProcessorName() == DeliveryFeePreprocessor::class) {
                            $orderItem->setQuantity(1);
                        }
                    }
                }
            }
        }

        return parent::process($itemHolder, $context); // TODO: Change the autogenerated stub
    }

}
