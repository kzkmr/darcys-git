<?php
/**
 * This file is part of CustomerClassPrice4
 *
 * Copyright(c) Akira Kurozumi <info@a-zumi.net>
 *
 * https://a-zumi.net
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace Plugin\CustomerClassPrice4\Tests\Web\Admin\Csv;


use Eccube\Common\Constant;
use Eccube\Entity\Customer;
use Eccube\Tests\Web\Admin\AbstractAdminWebTestCase;
use Plugin\CustomerClassPrice4\Entity\CustomerClass;
use Symfony\Component\HttpFoundation\File\UploadedFile;


class CustomerControllerTest extends AbstractAdminWebTestCase
{
    protected $filepath;

    /**
     * @var CustomerClass
     */
    protected $customerClass;

    public function setUp()
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        $project_dir = self::$container->getParameter('kernel.project_dir');

        $this->filepath = __DIR__."/customers.csv";
        copy($project_dir.'/app/Plugin/CustomerClassPrice4/Tests/Fixtures/customers.csv', $this->filepath);

        $this->customerClass = $this->createCustomerClass();
    }

    public function tearDown()
    {
        parent::tearDown(); // TODO: Change the autogenerated stub
    }

    public function testルーティングチェック()
    {
        $this->client->request('GET', $this->generateUrl('customer_class_price_admin_csv_customer_import'));
        self::assertTrue($this->client->getResponse()->isSuccessful());

//        $this->client->request('GET', $this->generateUrl('customer_class_price_admin_csv_customer_export'));
//        self::assertTrue($this->client->getResponse()->isSuccessful());
    }

    public function test会員情報CSVアップロード()
    {
        $customer1 = $this->createCustomer();
        $customer2 = $this->createCustomer();

        $customers = [
            $customer1,
            $customer2
        ];

        $file = $this->createCsvFile($customers);

        $file = new UploadedFile(
            $file->getPathname(),
            'customers.csv',
            'text/csv',         // mimeType
            null,               // file size
            null,               // error
            true                // test mode
        );

        $crawler = $this->client->request(
            'POST',
            $this->generateUrl('customer_class_price_admin_csv_customer_import'),
            [
                'admin_csv_import' => [
                    Constant::TOKEN_NAME => 'dummy',
                    'import_file' => $file
                ]
            ]
        );

        self::assertTrue($this->client->getResponse()->isRedirection());

        self::assertEquals($this->customerClass->getId(), $customer1->getPlgCcpCustomerClass()->getId());
        self::assertEquals($this->customerClass->getId(), $customer2->getPlgCcpCustomerClass()->getId());
    }

    /**
     * @param array $customers
     * @return \SplFileObject
     */
    public function createCsvFile(array $customers): \SplFileObject
    {
        $file = new \SplFileObject($this->filepath, 'w');

        // ヘッダー設定
        $file->fputcsv([
            trans('plugin.customer_class_price.admin.customer.id_col'),
            trans('plugin.customer_class_price.admin.customer.name_col'),
            trans('plugin.customer_class_price.admin.customer.customer_class_id_col')
        ]);

        /** @var Customer $customer */
        foreach ($customers as $customer) {
            $file->fputcsv([
                $customer->getId(),
                $customer->getName01().$customer->getName02(),
                $this->customerClass->getId()
            ]);
        }

        return $file;
    }

    /**
     * @return CustomerClass
     */
    public function createCustomerClass(): CustomerClass
    {
        $CustomerClass = new CustomerClass();
        $CustomerClass->setName('テスト');
        $this->entityManager->persist($CustomerClass);
        $this->entityManager->flush();

        return $CustomerClass;
    }
}
